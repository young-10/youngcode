<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 实验13：基于XML的自动装配(自动赋值)
	JavaBean（基本类型）
			（自定义类型的属性是一个对象，这个对象在容器中可能存在-）
		
	  -->
	<bean id="car" class="code.young.bean.Car">
		<property name="carName" value="Benz"></property>
		<property name="color" value="blue"></property>
	</bean>
	<!--List<book> books:容器可以把容器中的所有book封装list赋值给这个属性  -->
	<bean id="book01" class="code.young.bean.book" >
		<property name="bookName" value="bookName1"></property>
	</bean>
	<bean id="book02" class="code.young.bean.book" >
		<property name="bookName" value="bookName2"></property>
	</bean>
	<bean id="book03" class="code.young.bean.book" >
		<property name="bookName" value="bookName3"></property>
	</bean>
	<!--为Person里面的自定义属性赋值】
		property:手动赋值
		自动装配：（仅限于对自定义类型的属性有效）
		autowire="default":不自动装配，不自动为car赋值
		autowire="byName":按照名字
		private Car car:以属性名作为id去容器中找到这个组件，给他赋值
		autowire="byType"
		private Car car:以属性的类型作为查找依据去容器中找到这个组件
		car=ioc.getBean(Car.class),如果容器中有多个这个组件，会报错，没找到，会装配null
		autowire="constructor"
		1）先按照有参构造器的参数类型进行装配（成功就赋值），没有就直接为组件装配null
		2）如果按照类型找到了多个，参数的名作为id继续装配，找到就装配，没有就装配null
		autowire="no":不自动装配，不自动为car赋值
	  -->
	<bean id="person" class="code.young.bean.Person" autowire="byType">
<!-- 		<property name="car" ref="car"></property> -->
	</bean>
	
<!-- 实验14：[SpEL测试I]
    在SpEL中使用字面量、
    引用其他bean、
    引用其他bean的某个属性值、
    调用非静态方法
    调用静态方法、
    使用运算符 
    SpEL:Spring Expression language spring表达式语言-->
    <bean id="person04" class="code.young.bean.Person">
    	<!--字面量#{}-->
    	<property name="age" value="#{12*5}"></property>
    	<property name="name" value="#{book01.bookName}"></property>
    	<property name="car" value="#{car}"></property>
    	<!-- 
    	调用非静态方法
    	静态方法：UUID.randomUUID.toString()
    	#{T(全类名).静态方法名（1，2）}
    	 -->
    	<property name="email" value="#{T(java.util.UUID).randomUUID().toString().subString(0,5)}"></property>
    </bean>
</beans>
