<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 实验15：通过注解分别创建Dao、Service、Controller（控制器，控制网站跳转（servlet））★ 
		通过给bean上添加某些注解，可以快速的将bean加入到ioc容器中
		某个类上添加上任何一个注解都可以将这个组件快速的加入到ioc容器中
		Spring有四个注解
		@Controller 控制器：推荐给控制器层（servlet包下的这些）的组件加这个注解
		@Service 业务逻辑：我们推荐给业务逻辑层添加这个注解，BookService
		@Repository 给数据库层（持久层：dao层）的组件添加这个注解
		@Component 给不属于以上几层的组件添加这个注解
		注解可以随便加，spring底层不会去验证这个组件，是否如注解所说是dao层还是servlet层
		推荐给各层加入各自注解，给程序员阅读
		
		使用注解将组件快速的加入到容器中需要一下几步：
		1）给要添加的组件标上四个注解的任何一个
		2）告诉Spring ，自动扫描增加的组件，依赖context名称空间
		3)一定要导入aop包，支持注解模式的
	-->
	<!--
	 context:component-scan：自动组件扫描
	base-package：指定要扫描的基础包，把基础包下及他下面所有加了注解的类，自动的扫描进ioc容器
	 -->
	<!-- <context:component-scan base-package="com.young"></context:component-scan> -->
	<!--注解与bean配置相结合，将任意想加入的组件都加入  -->
	<!--实验16：使用context:include-filter指定扫描包时要包含的类 -->
	<!-- <context:component-scan base-package="com.young">
		扫描的时候可以排除掉一些不需要的组件
			type="annotation"：指定排除规则，按照注解进行排除，标注了注解的组件不要
			expression=""需要排除的全类名 注意前后不要出现空格
			type="assignable"：按照类名进行排除
			下面三种用不上
			type="aspectj"
			type="custom"
			type="regex"
		
		<context:exclude-filter type="assignable" expression="com.young.service.BookService"/>
	</context:component-scan> -->
	<!-- 实验17：使用context:exclude-filter指定扫描包时不包含的类
	默认全部扫描进来
	一定要禁用默认的过滤的扫描规则  use-default-filters="false"
 	-->
	<!-- <context:component-scan base-package="com.young" use-default-filters="false">
		指定扫描哪些组件
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="assignable" expression="com.young.service.BookService"/>
	</context:component-scan> -->
	<!-- DI(依赖注入) -->
	<!-- 实验18：使用@Autowired注解实现根据类型实现自动装配★ -->
	<context:component-scan base-package="com.young"></context:component-scan>
</beans>
